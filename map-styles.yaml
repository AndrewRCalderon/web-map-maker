# Define colors up here, split up by feature type for convenience
quiet-la-colors:
    text:
        - &text             '#757575'
    areas:
        - &background       '#efebe7'
        - &land             '#f4f2ed'
        - &forest           '#dee0d5'
        - &grass            '#e9ebe0'   # lighten(@forest, 5%)
        - &park             '#e1e3da'   # lighten(@forest, 3%)
        - &cemetery         '#e4e5dc'
        - &hospital         '#e8e4e8'
        - &school           '#e4e0ee'   # lighten(#D9D5E3, 5%)
        - &stadium          '#d9cdc1'
        - &beach            '#ebe2cd'
        - &runway           '#bfbebd'
        - &aerodrome        '#d6d6d6'
        - &building         'rgba(222,222,222,0.76)'
        - &building_outline 'rgba(0,0,0,0)'
        - &building_top     'rgba(230,230,230,1)'

        - &water            '#c3d5dd'
        - &residential      '#efede8'   # @land * 0.98
        - &commercial       '#edebe6'   # @land * 0.97
        - &industrial       '#eae6e4'   # @land * 0.96
        - &military         '#e8e4e1'   # @land * 0.95
        - &parking          '#eeeeee'
        - &pedestrian       '#e7e7e7'   # @parking * 0.97
        - &place_of_worship '#e3c5c9'
        - &admin            '#000000'
    borders:
        - &county_brdr      '#8a7c7c'
        - &california_brdr  '#827676'
        - &nation_brdr      '#6E6666'
    roads:
        - &road             '#c8c8c1'
        - &road_text        '#757575'
        - &rail_line        '#c8c8c1'
        - &aeroway          '#dddddd'

camera:
    type: isometric
    axis: [0, .1] # very small building extrusion

sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles---JwESU

lights:
    light1:
        type: directional
        direction: [.1, .5, -1]
        diffuse: .35
        ambient: .7

layers:
    earth:
        data: { source: osm, layer: earth }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: *background

    water:
        data: { source: osm, layer: water }
        draw:
            polygons:
                interactive: true
                order: function() { return feature.sort_key; }
                color: *water

        waterway:
            filter: { not: { kind: [river, stream, canal] } }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *water
                    width: [[11, 0.5px], [20, 6px]]

        waterway_river:
            filter: { kind: river }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *water
                    width: [[11, 0.5px], [20, 6px]]

        waterway_stream_canal:
            filter: { kind: [stream, canal] }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *water
                    width: [[13, 0.5px], [20, 4px]]

        playa:
            data: { source: osm, layer: water }
            filter: { kind: [playa, Playa, Alkaline Lake] }
            draw:
                polygons:
                    order: function() { return feature.sort_key; }
                    color: *background


    boundaries:
        data: { source: osm, layer: boundaries }
        draw:
            lines:
                order: function() { return feature.sort_key; }
        country:
            filter: { type: country }
            draw:
                lines:
                    color: *nation_brdr
                    width: 1.5px
        region:
            filter:
                any:
                    - type: state
                    - kind: [state, department, region, provincial, territorial]
                    - admin_level: 4
            draw:
                lines:
                    color: *california_brdr
                    width: [[2, 0.75px], [3, 1px], [5, 1.5px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]
        county:
            filter:
                type: county
                kind: county
            draw:
                lines:
                    color: *county_brdr
                    width: [[2, 0.75px], [3, 1px], [5, 1.5px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]

    landuse:
        data: { source: osm, layer: landuse }
        draw:
            polygons:
                interactive: true
                order: function() { return feature.sort_key; }
                color: '#cccccc'
        aerodrome:
            filter: {kind: [aerodrome, apron]}
            draw:
                polygons:
                    color: *industrial
        arena:
            filter: {kind: arena}
            draw:
                polygons:
                    color: *stadium
        beach:
            filter: {kind: beach}
            draw:
                polygons:
                    color: *beach
        cemetery:
            filter: {kind: cemetery}
            draw:
                polygons:
                    color: *cemetery
        college:
            filter: {kind: college}
            draw:
                polygons:
                    color: *school
        commercial:
            filter: {kind: [commercial, retail] }
            draw:
                polygons:
                    color: *commercial
        farm:
            filter: {kind: [farm, farmland, farmyard] }
            draw:
                polygons:
                    color: *land
        footway:
            filter: {kind: footway}
            draw:
                polygons:
                    color: *land
        forest:
            filter: {kind: [forest, wood]}
            draw:
                polygons:
                    color: *forest
        grass:
            filter: {kind: [grass, meadow, scrub]}
            draw:
                polygons:
                    color: *grass
        hospital:
            filter: {kind: hospital}
            draw:
                polygons:
                    color: *hospital
        industrial:
            filter: {kind: [industrial, quarry, substation, wastewater_plant]}
            draw:
                polygons:
                    color: *industrial
        kindergarten:
            filter: {kind: kindergarten}
            draw:
                polygons:
                    color: *school
        military:
            filter: {kind: military}
            draw:
                polygons:
                    color: *military
        park:
            filter: {kind: [ common, dog_park, garden, golf_course, park, protected_area, national_park, nature_reserve,
                playground, pitch, recreation_ground, village_green, zoo] }
            draw:
                polygons:
                    color: *park
        parking:
            filter: {kind: parking}
            draw:
                polygons:
                    color: *parking
        pedestrian:
            filter: {kind: pedestrian}
            draw:
                polygons:
                    color: *pedestrian
        place_of_worship:
            filter: {kind: place_of_worship}
            draw:
                polygons:
                    color: *place_of_worship
        prison:
            filter: {kind: prison}
            draw:
                polygons:
                    color: *industrial
        railway:
            filter: {kind: railway}
            draw:
                polygons:
                    color: *industrial
        residential:
            filter: {kind: residential}
            draw:
                polygons:
                    color: *residential
        school:
            filter: {kind: school}
            draw:
                polygons:
                    color: *school
        sports_center:
            filter: {kind: [sports_center, sports_centre] }
            draw:
                polygons:
                    color: *stadium
        swimming_pool:
            filter: {kind: swimming_pool}
            draw:
                polygons:
                    color: *water
        stadium:
            filter: {kind: stadium}
            draw:
                polygons:
                    color: *stadium
        university:
            filter: {kind: university}
            draw:
                polygons:
                    color: *school
        urban_area:
            filter: {kind: "urban area"}
            draw:
                polygons:
                    color: *residential
        wetland:
            filter: {kind: wetland}
            draw:
                polygons:
                    color: *land

    roads:
        data: { source: osm, layer: roads }
        filter:
            not: { kind: rail }
        draw:
            lines:
                interactive: true
                order: function() { return feature.sort_key; }
                cap: round
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *road
                    # color: '#ff0000'
                    width: [[3, 0px], [6, 1px], [10, 1.3px], [11, 1.7px], [12, 2px], [13, 3.3px], [14, 6px], [15, 8px], [16, 12px]]
        road_motorway_link:
            filter: { highway: motorway_link }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *road
                    width: [[8, 0.3px], [9, 0.4px], [12, 1px], [14, 2px], [15, 4px]]
        major_road:
            filter: { kind: major_road }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *road
                    width: [[8, 0.3px], [9, 0.4px], [12, 0.5px], [13, 1px], [14, 1.3px], [15, 5px], [16, 8px]]
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *road
                    width: [[13, 0.15px], [14, 0.3px], [15, 0.9px], [16, 1.2px], [18, 2px]]
        service_road:
            filter: { highway: service }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *road
                    width: [[13, 0.1px], [14, 0.2px], [15, 0.6px], [16, 0.8px]]
        path:
            filter: { not: {highway: footway}, kind: path }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *road
                    width: [[12, 0px], [13, 0.1px], [14, 0.6px], [15, 1px], [16, 2px]]

    # Need to add dasharray here
    rail:
        data: { source: osm, layer: roads }
        filter: { kind: [ railway, rail ] }
        draw:
            lines:
                order: function() { return feature.sort_key; }
                color: *rail_line
                dasharray: [[14, [1,1]], [15, [1,2]]]
                width: [[14, 0.4px], [15, 0.75px], [20, 2px]]

    # Airports
    aeroways:
        data: { source: osm, layer: roads }
        filter: { aeroway: [runway, taxiway] }
        aeroway_runway:
            filter: { aeroway: runway }
            draw:
                polygons:
                    order: function() { return feature.sort_key; }
                    color: *aeroway
                lines:
                    order: function() { return feature.sort_key; }
                    color: *aeroway
                    width: [[11, 3px], [20, 16px]]
        aeroway_taxiway:
            filter: { aeroway: taxiway }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: *aeroway
                    width: [[11, 0.5px], [20, 6px]]


    buildings:
        data: { source: osm, layer: buildings }
        filter: { $zoom: { min: 13 } }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: *building
                extrude: function () { return $zoom >= 16; }
            lines:
                order: function() { return feature.sort_key; }
                color: '#cbc8c7'
                width: 1px
                extrude: function () { return $zoom >= 16; }

    # Labels
    water_label:
        data: { source: osm, layer: places }
        filter: { kind: [sea, ocean] }
        draw:
            text:
                text_source: name
                font:
                    family: 'Benton Gothic Regular'
                    size: 12px
                    fill: '#757575'
                    # stroke: { color: [255,255,255,0.7], width:1px }
                    stroke: { color: '#ffffff', width:1 }

    road_label_major:
        data: { source: osm, layer: roads }
        filter: {name: true, kind: major_road}
        draw:
            text:
                text_source: name
                offset: [0px, -10px]
                order: function() { return feature.sort_key; }
                font:
                    family: 'Benton Gothic Regular'
                    size: [[13, 12px], [19, 15px]]
                    fill: *road_text
                    stroke: {color: '#efebe7', width: 1}

    road_label_minor:
        data: { source: osm, layer: roads }
        filter: {name: true, kind: minor_road}
        draw:
            text:
                text_source: name
                offset: [0px, -10px]
                order: function() { return feature.sort_key; }
                font:
                    family: 'Benton Gothic Regular'
                    size: [[13, 10px], [19, 13px]]
                    fill: *road_text
                    stroke: {color: '#efebe7', width: 1}

    road_label_interstate_shields:
        data: { source: osm, layer: roads }
        filter:
            all:
                - highway: "motorway"
                - network: ["US:I", "US:NHS High Priority Corridors"]
        draw:
            text:
                text_source: ref
                order: function() { return feature.sort_key; }
                font:
                    family: 'Benton Gothic Bold'
                    size: 11px
                    fill: *road_text
                    stroke: {color: '#efebe7', width: 1}

# Is there easy letter spacing adjustment?
# Is there an easy way to do a dasharray?
# letter halos?
